package main

import (
	"encoding/json"
	"net/http"

	"github.com/gin-gonic/gin"
)

func main() {
	// standard lib
	// http.HandleFunc("/ping", pingpongHandle)
	// log.Fatal(http.ListenAndServe(":8080", nil))

	//Mux
	// r := mux.NewRouter()
	// r.HandleFunc("/articles/{category}", ArticlesCategoryHandler)
	// http.ListenAndServe(":8080", r)

	//Gin
	r := gin.Default() // have middleware, logging etc
	r.GET("ping", func(ctx *gin.Context) {
		ctx.JSON(http.StatusOK, gin.H{
			"message": "pong",
		})
	})
	// r.Run() // default 8080
	r.Run(":8080") // default 8080

}

// func ArticlesCategoryHandler(w http.ResponseWriter, r *http.Request) {
// 	vars := mux.Vars(r)
// 	category := vars["category"]
// 	fmt.Println(category)
// 	w.WriteHeader(http.StatusOK)
// 	fmt.Fprintf(w, "Category: %v\n", vars["category"])

// }

func pingpongHandle(w http.ResponseWriter, r *http.Request) {
	resp := struct {
		Message string `json:"message"`
	}{
		Message: "pong",
	}
	json.NewEncoder(w).Encode(&resp)
}
